# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Linux
  timeoutInMinutes: 0

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - script: |
      sudo -H pip3 install --upgrade pip;
      pip3 install awscli --upgrade --user;
      export PATH="/home/vsts/.local/bin:$PATH";
      which aws;
      aws --version;
    displayName: 'update pip, install aws cli'

  - script: mkdir -p ./volumes/app/mattermost/{data,logs,config,plugins}
    displayName: 'make the volume dirs for the docker build'

  - task: DockerCompose@0
    displayName: 'Run a Docker Compose command'
    inputs:
      containerregistrytype: 'Container Registry'
      dockerRegistryEndpoint: 'thad-quay.io'
      dockerComposeFileArgs: DB_HOST=oit-mattermost.cdpgxvlwrhgf.us-east-1.rds.amazonaws.com DB_PORT_NUMBER=5432 MM_DBNAME=oitmattermost MM_USERNAME=root MM_PASSWORD=snow4ride edition=team"
      dockerComposeCommand: build

  - script: docker image ls -a
    displayName: 'image name list'

  - script: which zip;
    displayName: 'find zip cmd'

  - script: |
      sudo ln -s /home/vsts/.local/bin/aws /usr/bin/aws;
      which aws;
      aws --version;
    displayName: 'symlink aws cmd so task can use it'
    

#  - task: ECRPushImage@1
#    inputs:
#      awsCredentials: 'OIT-AWS-Blockchain-2019'
#      regionName: 'us-east-1'
#      imageSource: 'imagename'
#      sourceImageName: 'quay.io/thad/oitmattermost:latest'
#      repositoryName: 'oitmattermost'
#      autoCreateRepository: true

  - task: AWSCLI@1
    displayName: 'AWS CLI 1'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 's3'
      awsSubCommand: 'ls'
#      awsSubCommand: 'create-application --application-name oitmattermost --region us-east-1'
      failOnStandardError: false

  - script: |
      export PATH="/home/vsts/.local/bin:$PATH";
      aws elasticbeanstalk create-application --application-name oitmattermost --region us-east-1
      aws elasticbeanstalk create-environment --application-name oitmattermost --environment-name oitmattermost_staging --solution-stack-name "64bit Amazon Linux v2.12.14 running Docker" --option-settings file://options.json --region us-east-1;
      zip -r deployment.zip . ;
      aws s3 mb s3://oitmattermost-eb --region us-east-1;
      aws s3 cp deployment.zip s3://oitmattermost-eb --region us-east-1;
      aws elasticbeanstalk create-application-version --application-name oitmattermost --version-label v1 --source-bundle S3Bucket="oitmattermost-eb",S3Key="deployment.zip" --auto-create-application --region us-east-1
      aws elasticbeanstalk update-environment --application-name oitmattermost --environment-name oitmattermost_staging --version-label v1 --region us-east-1;
    displayName: 'push image and provision eb'

  - task: AWSCLI@1
    displayName: 'AWS CLI 2'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 'aws elasticbeanstalk create-environment --application-name oitmattermost --environment-name oitmattermost_staging --solution-stack-name "64bit Amazon Linux v2.12.14 running Docker" --option-settings file://options.json --region us-east-1;'
      failOnStandardError: false

  - script: |
      zip -r deployment.zip ./;
    displayName: 'push image and provision eb'

  - task: AWSCLI@1
    displayName: 'AWS CLI 3'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 'aws s3 mb s3://oitmattermost-eb --region us-east-1;'
      failOnStandardError: false

  - task: AWSCLI@1
    displayName: 'AWS CLI 4'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 'aws s3 cp deployment.zip s3://oitmattermost-eb --region us-east-1;'
      failOnStandardError: false

  - task: AWSCLI@1
    displayName: 'AWS CLI 5'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 'aws elasticbeanstalk create-application-version --application-name oitmattermost --version-label v1 --source-bundle S3Bucket="oitmattermost-eb",S3Key="deployment.zip" --auto-create-application --region us-east-1'
      failOnStandardError: false

  - task: AWSCLI@1
    displayName: 'AWS CLI 6'
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      awsCommand: 'aws elasticbeanstalk update-environment --application-name oitmattermost --environment-name oitmattermost_staging --version-label v1 --region us-east-1;'
      failOnStandardError: false
  - task: S3Upload@1
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      bucketName: 'oitmattermost-eb'
      sourceFolder: './'
      globExpressions: 'deployment.zip'
      targetFolder: 's3://oitmattermost-eb'
      createBucket: true

  - task: BeanstalkDeployApplication@1
    inputs:
      awsCredentials: 'OIT-AWS-Blockchain-2019'
      regionName: 'us-east-1'
      applicationName: 'oitmattermost'
      environmentName: 'oitmattermost_staging'
      applicationType: 's3'